{"version":3,"sources":["game/style.module.css","game/modules/game/circle/preload.ts","game/modules/game/settingsConfig.ts","game/modules/game/storyConfig.ts","game/modules/scenes/Default.ts","game/modules/scenes/modules/Player.ts","game/modules/scenes/modules/Dialog.ts","game/modules/scenes/modules/Extensions.ts","utils/createGuard.ts","game/modules/scenes/modules/Level.ts","game/modules/scenes/assets/dialogs.ts","game/modules/scenes/assets/preloadData.ts","game/modules/service/config.ts","game/index.tsx","game/instance.ts","containers/App/index.tsx","index.js","containers/App/style.module.css"],"names":["module","exports","preloadData","data","forEach","unit","method","content","load","settingsConfig","delta","width","height","y","buttons","margin","top","right","colors","names","text","triggerDebug","animation","ease","duration","storyConfig","tal","NAME","PORTRAIT","DefaultScene","player","extensions","dialog","map","world","this","Extensions","call","gameResourcesData","make","tilemap","key","tileset","addTilesetImage","createLayer","Player","Dialog","dialogs","Level","time","update","activeDialog","isActive","Scene","scene","cursors","playerBody","playerVisual","camera","playerParamsConfig","blockMove","left","blocked","coordinates","x","createPlayer","createCamera","createTeleport","playerBounce","playerData","getObjectLayer","objects","physics","add","sprite","setAlpha","setBounce","setCircle","collider","body","setCollideWorldBounds","setBounds","widthInPixels","heightInPixels","setCollisionByExclusion","input","keyboard","createCursorKeys","cameras","main","smoothMoveCameraTowards","target","smoothFactor","undefined","scrollX","scrollY","anims","create","frames","frameRate","repeat","on","play","destroy","isBlocked","control","resetBlockMove","controlPlayerBody","velocity","angle","maxXVelocity","startedXVelocity","flyXVelocity","wallJumpXVelocity","wallJumpYVelocity","jumpVelocity","inertia","playerAcceleration","oldVelocityX","isDown","down","none","up","setBlockMove","setVelocityX","Math","max","setVelocityY","min","direction","moveBlockTime","canLeftMove","canRightMove","sceneId","wrapper","tweens","sceneDialogs","game","config","sceneWidth","Number","leftBGFrame","setOrigin","rightBGFrame","setPosition","nextButton","setInteractive","setScrollFactor","skipButton","nextDialog","dialogEnd","nextButtonClick","bind","skipButtonClick","centerBG","tileSprite","container","hideTween","targets","showTween","hide","show","createDialogTriggers","tween","onComplete","once","tweensPlay","dialogId","replica","id","name","portrait","createPortrait","createName","createText","showDialog","imgName","firstFrame","list","image","imgFit","origin","style","font","color","wordWrap","useAdvancedWrap","portraitWidth","textMargin","actualReplicaNumber","length","valueOfReplica","clearDialog","isSkip","actualReplicaElement","callback","closeDialog","ignoredDialogs","JSON","parse","localStorage","getItem","actualSceneIgnored","push","newActualIgnored","Set","setItem","stringify","hideDialog","debug","createRectangle","properties","find","value","trigger","zone","enable","setAllowGravity","moves","overlap","createConversation","img","maxWidth","maxHeight","widthScale","heightScale","scale","setScale","alpha","graphics","fillStyle","fillRect","props","reduce","acm","upLeftX","apply","upLeftY","rectWidth","rectHeight","createGuard","checkedKey","result","arcadeBodyGuard","createButtons","createTraps","buttonsList","textures","get","getFrameNames","i","getPropsFromObject","button","tileName","createBridge","bridgetId","bridgesList","gameHeight","bridgeSprites","yFromDirection","from","bridge","setTimeout","findCorners","bridgeBody","Phaser","Physics","Arcade","STATIC_BODY","setImmovable","setFriction","layer","textureName","orientation","trap","setDepth","assets","type","CANVAS","parent","backgroundColor","default","arcade","gravity","Game","useState","refBox","setRefBox","useLayoutEffect","offsetWidth","className","css","root","ref","movement","App","isDebug","setIsDebug","changeDebug","v","onClick","dButton","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0de1afca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__D1GZz\",\"game\":\"style_game__1is8e\",\"movement\":\"style_movement__2MKHA\"};","import { Scene } from \"phaser\";\nimport { PreloadTypes } from \"./types\";\n\nexport function preloadData(this: Scene, data: PreloadTypes[]) {\n  data.forEach((unit) => {\n    const { method, data } = unit;\n\n    data.forEach((content) => {\n      // @ts-ignore: Unreachable code error\n      const result = this.load[method](...content);\n    });\n  });\n}\n","export const settingsConfig = {\n  gravity: 500,\n  maxXVelocity: 800,\n  startedXVelocity: 250,\n  flyXVelocity: 2,\n  jumpVelocity: 300,\n  inertia: 100,\n\n  wallJumpXVelocity: 500,\n  wallJumpYVelocity: 400,\n\n  moveBlockTime: 500, //ms\n  playerBounce: 0.2,\n\n  playerAcceleration: (delta: number) => delta / 2,\n\n  dialogWrapperMoveTime: 800,\n\n  portraits: {\n    width: 150,\n    height: 170,\n    y: 10,\n  },\n  dialog: {\n    buttons: {\n      width: 100,\n      height: 100,\n      margin: {\n        top: 10,\n        right: 15,\n      },\n    },\n    colors: {\n      names: \"red\",\n      text: \"white\",\n    },\n\n    triggerDebug: true,\n  },\n\n  bridges: {\n    animation: {\n      ease: \"Quad.easeInOut\",\n      duration: 1000,\n    },\n  },\n};\n","export const storyConfig = {\n  characters: {\n    tal: {\n      NAME: \"TAL\",\n      PORTRAIT: \"tal\",\n    },\n  },\n};\n","import { Scene } from \"phaser\";\nimport {\n  Dialog,\n  dialogs,\n  Extensions,\n  gameResourcesData,\n  Level,\n  Player,\n  preloadData,\n} from \"..\";\n\nexport default class DefaultScene extends Scene {\n  player: Player | null = null;\n  extensions!: Extensions;\n  dialog: Dialog | null = null;\n  map: Phaser.Tilemaps.Tilemap | null = null;\n  world: Phaser.Tilemaps.TilemapLayer | null = null;\n\n  preload() {\n    this.extensions = new Extensions(this);\n    preloadData.call(this, gameResourcesData);\n  }\n  create() {\n    this.map = this.make.tilemap({ key: \"map\" });\n    const tileset = this.map.addTilesetImage(\n      \"platforms32x32\",\n      \"platforms32x32\"\n    );\n    this.world = this.map.createLayer(0, tileset, 0, 0);\n\n    this.player = new Player(this);\n    this.dialog = new Dialog(this, dialogs, 0);\n    const level = new Level(this);\n  }\n\n  update(time: number, delta: number) {\n    this.player?.update(time, delta, this.dialog?.activeDialog?.isActive);\n  }\n}\n","import { settingsConfig } from \"game/modules\";\nimport { PlayerParamsConfig } from \"game/modules/game/circle\";\nimport DefaultScene from \"../Default\";\n\nexport class Player {\n  cursors!: Phaser.Types.Input.Keyboard.CursorKeys;\n  playerBody!: Phaser.Types.Physics.Arcade.SpriteWithDynamicBody;\n  playerVisual!: Phaser.GameObjects.Sprite;\n  camera!: Phaser.Cameras.Scene2D.Camera;\n  playerParamsConfig: PlayerParamsConfig = {\n    blockMove: {\n      left: {\n        blocked: false,\n        time: 0,\n      },\n      right: {\n        blocked: false,\n        time: 0,\n      },\n    },\n  };\n  coordinates = {\n    x: 0,\n    y: 0,\n  };\n\n  constructor(scene: DefaultScene) {\n    const { world, map } = scene;\n\n    if (map && world) {\n      this.createPlayer(scene, map, world);\n      this.createCamera(scene, map, this.playerBody);\n    }\n    this.createTeleport(scene, this.playerBody);\n  }\n\n  createPlayer(\n    scene: DefaultScene,\n    map: Phaser.Tilemaps.Tilemap,\n    world: Phaser.Tilemaps.TilemapLayer\n  ) {\n    const { playerBounce } = settingsConfig;\n    const layer = map.getObjectLayer(\"player\");\n    const playerData = layer.objects[0];\n\n    this.playerBody = scene.physics.add\n      .sprite(playerData.x || 0, playerData.y || 0, \"playerSprite\")\n      .setAlpha(0);\n    this.playerVisual = scene.add.sprite(\n      this.playerBody.x,\n      this.playerBody.y,\n      \"playerBody\"\n    );\n    this.coordinates.x = this.playerBody.x;\n    this.coordinates.y = this.playerBody.y;\n\n    this.playerBody\n      .setBounce(playerBounce)\n      .setCircle(this.playerBody.width / 2);\n    scene.physics.add.collider(this.playerBody, world);\n    this.playerBody.body.setCollideWorldBounds(true);\n    scene.physics.world.setBounds(0, 0, map.widthInPixels, map.heightInPixels);\n    world.setCollisionByExclusion([-1], true);\n\n    this.cursors = scene.input.keyboard.createCursorKeys();\n  }\n\n  createCamera(\n    scene: DefaultScene,\n    map: Phaser.Tilemaps.Tilemap,\n    player: Phaser.Types.Physics.Arcade.SpriteWithDynamicBody\n  ) {\n    this.camera = scene.cameras.main;\n    this.camera.setBounds(0, 0, map.widthInPixels, map.heightInPixels);\n    this.smoothMoveCameraTowards(player);\n  }\n\n  smoothMoveCameraTowards(\n    target: Phaser.Types.Physics.Arcade.SpriteWithDynamicBody | null,\n    smoothFactor?: number\n  ) {\n    if (this.camera && target) {\n      if (smoothFactor === undefined) {\n        smoothFactor = 0;\n      }\n      this.camera.scrollX =\n        smoothFactor * this.camera.scrollX +\n        (1 - smoothFactor) * (target.x - this.camera.width * 0.5);\n      this.camera.scrollY =\n        smoothFactor * this.camera.scrollY +\n        (1 - smoothFactor) * (target.y - this.camera.height * 0.5);\n    }\n  }\n\n  createTeleport(\n    scene: DefaultScene,\n    player: Phaser.Types.Physics.Arcade.SpriteWithDynamicBody\n  ) {\n    scene.anims.create({\n      key: \"teleportAnimation\",\n      frames: \"teleport\",\n      frameRate: 20,\n      repeat: 0,\n    });\n    scene.input.keyboard.on(\"keydown-ENTER\", () => {\n      this.coordinates = {\n        x: player.x || 0,\n        y: player.y || 0,\n      };\n    });\n\n    scene.input.keyboard.on(\"keydown-SPACE\", () => {\n      const { x, y } = this.coordinates;\n      if (player) {\n        player.x = x;\n        player.y = y;\n      }\n\n      const sprite = scene.add\n        .sprite(x, y, \"teleport\")\n        .play(\"teleportAnimation\")\n        .on(\"complete\", () => {\n          sprite.destroy();\n        });\n    });\n  }\n\n  update(time: number, delta: number, isBlocked?: boolean) {\n    this.control(delta, time, isBlocked);\n    this.resetBlockMove(time);\n    this.controlPlayerBody(delta);\n    this.smoothMoveCameraTowards(this.playerBody, 0.9);\n  }\n\n  controlPlayerBody(delta: number) {\n    this.playerVisual.x = this.playerBody.x;\n    this.playerVisual.y = this.playerBody.y;\n\n    if (this.playerBody.body.velocity.x) {\n      this.playerVisual.angle +=\n        delta * 0.003 * this.playerBody.body.velocity.x;\n    }\n  }\n\n  control(delta: number, time: number, isBlocked?: boolean) {\n    const {\n      maxXVelocity,\n      startedXVelocity,\n      flyXVelocity,\n      wallJumpXVelocity,\n      wallJumpYVelocity,\n      jumpVelocity,\n      inertia,\n      playerAcceleration,\n    } = settingsConfig;\n\n    const { velocity } = this.playerBody.body;\n    const oldVelocityX = velocity.x;\n\n    ///---- Left\n    if (\n      this.cursors.left.isDown &&\n      !this.playerParamsConfig.blockMove.left.blocked &&\n      !isBlocked\n    ) {\n      if (!this.playerBody.body.blocked.none) {\n        if (oldVelocityX === 0) {\n          velocity.x = -startedXVelocity;\n        } else if (oldVelocityX > 0) {\n          velocity.x = oldVelocityX * -1;\n        } else if (velocity.x > maxXVelocity * -1) {\n          velocity.x -= playerAcceleration(delta);\n        } else if (velocity.x >= maxXVelocity * -1) {\n          velocity.x = maxXVelocity * -1;\n        }\n      } else {\n        velocity.x -= flyXVelocity;\n      }\n\n      ///---- Right\n    } else if (\n      this.cursors.right.isDown &&\n      !this.playerParamsConfig.blockMove.right.blocked &&\n      !isBlocked\n    ) {\n      if (!this.playerBody.body.blocked.none) {\n        if (oldVelocityX === 0) {\n          velocity.x = startedXVelocity;\n        } else if (oldVelocityX < 0) {\n          velocity.x = oldVelocityX * -1;\n        } else if (velocity.x < maxXVelocity) {\n          velocity.x += playerAcceleration(delta);\n        } else if (velocity.x >= maxXVelocity) {\n          velocity.x = maxXVelocity;\n        }\n      } else {\n        velocity.x += flyXVelocity;\n      }\n      ///---- None\n    } else {\n      if (this.playerBody.body.blocked.down) {\n        if (velocity.x > inertia) {\n          velocity.x -= delta * 2;\n        } else if (velocity.x < -inertia) {\n          velocity.x += delta * 2;\n        } else {\n          velocity.x = 0;\n        }\n      }\n    }\n\n    ///---- Up\n    if (this.cursors.up.isDown && !isBlocked) {\n      if (this.playerBody.body.blocked.left) {\n        this.setBlockMove(\"left\", time);\n        this.playerBody.setVelocityX(Math.max(wallJumpXVelocity, oldVelocityX));\n        this.playerBody.setVelocityY(-wallJumpYVelocity);\n      } else if (this.playerBody.body.blocked.right) {\n        this.setBlockMove(\"right\", time);\n        this.playerBody.setVelocityX(\n          Math.min(-wallJumpXVelocity, oldVelocityX)\n        );\n        this.playerBody.setVelocityY(-wallJumpYVelocity);\n      } else if (this.playerBody.body.blocked.down) {\n        this.playerBody.setVelocityY(-jumpVelocity);\n      }\n    }\n  }\n  setBlockMove(direction: keyof PlayerParamsConfig[\"blockMove\"], time: number) {\n    const { blockMove } = this.playerParamsConfig;\n    blockMove[direction].blocked = true;\n    blockMove[direction].time = time;\n  }\n\n  resetBlockMove(time: number) {\n    const { moveBlockTime } = settingsConfig; //ms\n    const { left, right } = this.playerParamsConfig.blockMove;\n\n    const canLeftMove = time - left.time > moveBlockTime;\n\n    const canRightMove = time - right.time > moveBlockTime;\n\n    if (canLeftMove) {\n      left.blocked = false;\n    }\n\n    if (canRightMove) {\n      right.blocked = false;\n    }\n  }\n}\n","import { Extensions, settingsConfig } from \"game/modules\";\nimport {\n  ActiveDialog,\n  DialogList,\n  DialogProperties,\n  IgnoredDialogs,\n  Tweens,\n} from \"game/modules/game/circle\";\nimport DefaultScene from \"../Default\";\n\nexport class Dialog {\n  scene: DefaultScene;\n  extensions: Extensions;\n\n  wrapper: Phaser.GameObjects.Container;\n  tweens: Tweens;\n\n  activeDialog: ActiveDialog | null = null;\n  sceneDialogs: DialogList;\n  sceneId: number;\n\n  constructor(scene: DefaultScene, dialogs: DialogList, sceneId: number) {\n    this.sceneId = sceneId;\n    this.sceneDialogs = dialogs;\n    this.scene = scene;\n    this.extensions = scene.extensions;\n\n    const { width, height } = scene.game.config;\n    const sceneWidth = Number(width);\n\n    const leftBGFrame = scene.add.sprite(0, 0, \"dialogLeft\").setOrigin(0, 0);\n    const rightBGFrame = scene.add\n      .sprite(sceneWidth, 0, \"dialogRight\")\n      .setOrigin(0, 0);\n    rightBGFrame.setPosition(\n      rightBGFrame.x - rightBGFrame.width,\n      rightBGFrame.y\n    );\n    const { buttons } = settingsConfig.dialog;\n\n    const nextButton = scene.add\n      .sprite(\n        sceneWidth - buttons.margin.right,\n        buttons.margin.top,\n        \"dialogNextButton\"\n      )\n      .setInteractive()\n      .setScrollFactor(0)\n      .setOrigin(1, 0);\n    const skipButton = scene.add\n      .sprite(\n        sceneWidth - buttons.margin.right,\n        buttons.margin.top * 2 + buttons.height,\n        \"dialogSkipButton\"\n      )\n      .setInteractive()\n      .setScrollFactor(0)\n      .setOrigin(1, 0);\n    // this.extensions.imgFit(nextButton, buttons.width, buttons.height); //fit img to config size\n    // this.extensions.imgFit(skipButton, buttons.width, buttons.height); //fit img to config size\n\n    const { nextDialog, dialogEnd } = this;\n    const nextButtonClick = nextDialog.bind(this);\n    const skipButtonClick = dialogEnd.bind(this, true);\n    nextButton.on(\"pointerup\", nextButtonClick);\n    skipButton.on(\"pointerup\", skipButtonClick);\n\n    const centerBG = scene.add\n      .tileSprite(\n        leftBGFrame.width,\n        0,\n        sceneWidth - leftBGFrame.width - rightBGFrame.width,\n        rightBGFrame.height,\n        \"dialogCenter\"\n      )\n      .setOrigin(0, 0);\n\n    this.wrapper = scene.add\n      .container(0, 0)\n      .add([leftBGFrame, rightBGFrame, centerBG, nextButton, skipButton])\n      .setScrollFactor(0)\n      .setPosition(0, -centerBG.height);\n\n    const hideTween = scene.tweens.create({\n      targets: this.wrapper,\n\n      y: -centerBG.height,\n      ease: \"Quad.easeInOut\",\n      repeat: 0,\n      duration: settingsConfig.dialogWrapperMoveTime,\n    });\n\n    const showTween = scene.tweens.create({\n      targets: this.wrapper,\n      y: 0,\n      ease: \"Quad.easeInOut\",\n      repeat: 0,\n      duration: settingsConfig.dialogWrapperMoveTime,\n    });\n\n    this.tweens = {\n      hide: hideTween,\n      show: showTween,\n    };\n\n    this.createDialogTriggers(scene.map);\n  }\n\n  tweensPlay(tween: Phaser.Tweens.Tween, onComplete?: () => void) {\n    if (onComplete) {\n      tween.once(\"complete\", () => {\n        onComplete && onComplete();\n      });\n    }\n    tween.play();\n  }\n\n  showDialog(onComplete?: () => void) {\n    if (this.activeDialog) {\n      this.activeDialog.isActive = true;\n    }\n\n    this.tweensPlay(this.tweens.show, onComplete);\n  }\n\n  hideDialog(onComplete?: () => void) {\n    if (this.activeDialog) {\n      this.activeDialog.isActive = false;\n    }\n    this.tweensPlay(this.tweens.hide, onComplete);\n  }\n\n  createConversation(dialogId: number) {\n    const activeDialog = this.sceneDialogs[dialogId];\n    if (activeDialog) {\n      this.activeDialog = {\n        dialog: activeDialog,\n        replica: 0,\n        id: dialogId,\n        objects: {},\n      };\n\n      const { name, portrait, replica } = activeDialog[0];\n      this.createPortrait(portrait);\n      this.createName(name);\n      this.createText(replica);\n\n      this.showDialog();\n    }\n  }\n\n  createPortrait(imgName: string) {\n    const { height, width, y } = settingsConfig.portraits;\n    const firstFrame = this.wrapper.list[0];\n    const portrait = this.scene.add\n      //@ts-ignore\n      .image(firstFrame.width || 25, y, imgName)\n      .setOrigin(0);\n\n    this.extensions.imgFit(portrait, width, height);\n\n    this.wrapper.add(portrait);\n\n    if (this.activeDialog) {\n      this.activeDialog.objects.portrait = portrait;\n    }\n  }\n\n  createName(name: string) {\n    const { height, width } = settingsConfig.portraits;\n\n    const text = this.scene.make.text({\n      x: 0,\n      y: 0,\n      text: name,\n      origin: { x: 0.5, y: 0 },\n      style: {\n        font: \"25px Arial\",\n        color: settingsConfig.dialog.colors.names,\n        wordWrap: {\n          width: width,\n          useAdvancedWrap: true,\n        },\n      },\n    });\n\n    text.x = 25 + width / 2;\n    text.y = height + 30;\n\n    this.wrapper.add(text);\n\n    if (this.activeDialog) {\n      this.activeDialog.objects.name = text;\n    }\n  }\n\n  createText(replica: string) {\n    const { y, width: portraitWidth } = settingsConfig.portraits;\n    const { buttons, colors } = settingsConfig.dialog;\n    const textMargin = 50;\n    const text = this.scene.make.text({\n      x: portraitWidth + textMargin,\n      y: y * 2,\n      text: replica,\n      origin: { x: 0, y: 0 },\n      style: {\n        font: \"bold 25px Arial\",\n        color: colors.text,\n        wordWrap: {\n          width:\n            Number(this.scene.game.config.width) -\n            textMargin * 2 -\n            portraitWidth -\n            buttons.width,\n          useAdvancedWrap: true,\n        },\n      },\n    });\n\n    this.wrapper.add(text);\n\n    if (this.activeDialog) {\n      this.activeDialog.objects.text = text;\n    }\n  }\n\n  clearDialog() {\n    if (this.activeDialog) {\n      const { objects } = this.activeDialog;\n\n      objects.name?.destroy();\n      objects.portrait?.destroy();\n      objects.text?.destroy();\n    }\n  }\n\n  nextDialog() {\n    if (this.activeDialog) {\n      const { dialog, replica } = this.activeDialog;\n      const actualReplicaNumber = replica + 1;\n\n      if (actualReplicaNumber < dialog.length) {\n        const {\n          name,\n          portrait,\n          replica: valueOfReplica,\n        } = dialog[actualReplicaNumber];\n        this.clearDialog();\n\n        this.createPortrait(portrait);\n        this.createName(name);\n        this.createText(valueOfReplica);\n\n        this.activeDialog.replica = actualReplicaNumber;\n      } else {\n        this.dialogEnd();\n      }\n    }\n  }\n\n  dialogEnd(isSkip?: boolean) {\n    if (this.activeDialog) {\n      const { dialog, replica, id: dialogId } = this.activeDialog;\n      const actualReplicaElement = dialog[replica] || dialog[dialog.length - 1];\n      actualReplicaElement.callback && actualReplicaElement.callback();\n      this.closeDialog();\n\n      if (isSkip && (dialogId || dialogId === 0)) {\n        const ignoredDialogs: IgnoredDialogs = JSON.parse(\n          localStorage.getItem(\"ignoredDialogs\") || \"[]\"\n        );\n        const actualSceneIgnored = ignoredDialogs[this.sceneId] || [];\n        actualSceneIgnored.push(dialogId);\n\n        const newActualIgnored = [...new Set(actualSceneIgnored)];\n        ignoredDialogs[this.sceneId] = newActualIgnored;\n\n        localStorage.setItem(\"ignoredDialogs\", JSON.stringify(ignoredDialogs));\n      }\n    }\n  }\n\n  closeDialog() {\n    const { clearDialog } = this;\n    this.hideDialog(clearDialog.bind(this));\n  }\n\n  createTrigger(x: number, y: number, width: number, height: number) {\n    const debug = settingsConfig.dialog.triggerDebug;\n    return this.scene.extensions.createRectangle(\n      x,\n      y,\n      width,\n      height,\n      0x00ff00,\n      debug ? 0.3 : 0\n    );\n  }\n\n  createDialogTriggers(map: Phaser.Tilemaps.Tilemap | null) {\n    if (map) {\n      const layer = map.getObjectLayer(\"dialogs\");\n      const triggerObjects = layer.objects;\n\n      triggerObjects.forEach(\n        ({ x = -100, y = -100, width = 32, height = 32, properties }) => {\n          const props: DialogProperties[] = properties;\n          const dialogId = Number(\n            props.find((value) => value.name === \"id\")?.value\n          );\n\n          const trigger = this.scene.add.zone(x, y, width, height).setOrigin(0);\n          this.scene.physics.world.enable(trigger);\n          //@ts-ignore\n          trigger.body.setAllowGravity(false);\n\n          //@ts-ignore\n          trigger.body.moves = false;\n\n          const { player } = this.scene;\n          if (player?.playerBody) {\n            this.scene.physics.add.overlap(player.playerBody, trigger, () => {\n              this.createConversation(dialogId);\n              trigger.destroy();\n            });\n          }\n        }\n      );\n    }\n  }\n}\n","import {\n  ObjectWithCorners,\n  TiledObjectProperties,\n  UnpackedTiledObjectProperties,\n} from \"game/modules/game/circle\";\nimport { Scene } from \"phaser\";\n\nexport class Extensions {\n  scene: Scene;\n\n  constructor(scene: Scene) {\n    this.scene = scene;\n  }\n\n  imgFit(img: Phaser.GameObjects.Image, maxWidth: number, maxHeight: number) {\n    const widthScale = maxWidth / img.width;\n    const heightScale = maxHeight / img.height;\n\n    const scale = Math.min(widthScale, heightScale, 1);\n\n    img.setScale(scale);\n  }\n\n  createRectangle(\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    color: number,\n    alpha: number\n  ) {\n    return this.scene.add\n      .graphics()\n      .fillStyle(color, alpha)\n      .fillRect(x, y, width, height);\n  }\n\n  getPropsFromObject(props: TiledObjectProperties[]) {\n    return props.reduce<UnpackedTiledObjectProperties>(\n      (acm, { name, value }) => {\n        return {\n          ...acm,\n          [name]: value,\n        };\n      },\n      {}\n    );\n  }\n\n  findCorners(list: ObjectWithCorners[]) {\n    const upLeftX = Math.min.apply(\n      null,\n      list.reduce((acm: number[], { x }) => {\n        acm.push(x);\n        return acm;\n      }, [])\n    );\n    const upLeftY = Math.min.apply(\n      null,\n      list.reduce((acm: number[], { y }) => {\n        acm.push(y);\n        return acm;\n      }, [])\n    );\n\n    const upRightX = Math.max.apply(\n      null,\n      list.reduce((acm: number[], { x, width }) => {\n        acm.push(x + width);\n        return acm;\n      }, [])\n    );\n    const upRightY = Math.max.apply(\n      null,\n      list.reduce((acm: number[], { y, height }) => {\n        acm.push(y + height);\n        return acm;\n      }, [])\n    );\n\n    const rectWidth = upRightX - upLeftX;\n    const rectHeight = upRightY - upLeftY;\n\n    return {\n      upLeftX,\n      upLeftY,\n      rectWidth,\n      rectHeight,\n    };\n  }\n}\n","export const createGuard = function <Type>(checkedKey: string) {\n  return function (value: Type | any): value is Type {\n    if (!value) {\n      return false;\n    }\n\n    //@ts-ignore\n    const result = (value as Type)[checkedKey];\n\n    return !!result || result === 0;\n  };\n};\n\nexport default createGuard;\n","import { BridgetProps, ButtonsProps, ObjectWithCorners, TrapProps } from \"game/modules/game/circle\";\nimport { settingsConfig } from \"game/modules/game/settingsConfig\";\nimport { createGuard } from \"utils\";\n\nimport DefaultScene from \"../Default\";\n\nconst arcadeBodyGuard = createGuard<Phaser.Physics.Arcade.Body>(\"setVelocity\");\nconst { duration, ease } = settingsConfig.bridges.animation;\n\nexport class Level {\n  scene: DefaultScene;\n  constructor(scene: DefaultScene) {\n    this.scene = scene;\n\n    const map = scene.map;\n    const player = scene.player?.playerBody;\n\n    if (map && player) {\n      this.createButtons(scene, map, player);\n      this.createTraps(scene, map, player);\n    }\n  }\n\n  createButtons(\n    scene: DefaultScene,\n    map: Phaser.Tilemaps.Tilemap,\n    player: Phaser.Types.Physics.Arcade.SpriteWithDynamicBody\n  ) {\n    const layer = map.getObjectLayer(\"buttons\");\n    const buttonsList = layer.objects;\n\n    const textures = scene.textures.get(\"buttons\").getFrameNames();\n\n    buttonsList.forEach(\n      ({ x = -100, y = -100, width = -100, height = -100, properties }, i) => {\n        const props: ButtonsProps =\n          scene.extensions.getPropsFromObject(properties);\n\n        const button = scene.add\n          .tileSprite(\n            x,\n            y,\n            width,\n            height,\n            \"buttons\",\n            props.tileName || textures[0]\n          )\n          .setOrigin(0, 1);\n        scene.physics.world.enable(button);\n\n        if (arcadeBodyGuard(button.body)) {\n          button.body.setAllowGravity(false);\n          // button.body.setVelocity(50, 0);\n        }\n\n        scene.physics.add.overlap(player, button, () => {\n          button.destroy();\n          this.createBridge(scene, map, player, props.bridgetId);\n        });\n      }\n    );\n  }\n\n  createBridge(\n    scene: DefaultScene,\n    map: Phaser.Tilemaps.Tilemap,\n    player: Phaser.Types.Physics.Arcade.SpriteWithDynamicBody,\n    id?: string | number\n  ) {\n    if (!id) {\n      return;\n    }\n    const layer = map.getObjectLayer(\"bridges\");\n    const bridgesList = layer.objects;\n    const textures = scene.textures.get(\"bridges\").getFrameNames();\n\n    const { height } = scene.game.config;\n    const gameHeight = Number(height);\n\n    const bridgeSprites: ObjectWithCorners[] = [];\n\n    bridgesList.forEach(\n      ({ x = -100, y = -100, width = 0, height = 0, properties }, i) => {\n        const props: BridgetProps =\n          scene.extensions.getPropsFromObject(properties);\n\n        if (props.bridgetId === id) {\n          const yFromDirection =\n            props.from === \"bottom\" ? -height * 2 : gameHeight + height * 2;\n\n          const bridge = scene.add\n            .tileSprite(\n              x,\n              yFromDirection,\n              width,\n              height,\n              \"bridges\",\n              props.tileName || textures[0]\n            )\n            .setOrigin(0, 1);\n\n          bridgeSprites.push({ ...bridge, y });\n\n          const bridgeAnimation = scene.tweens.add({\n            targets: bridge,\n            y,\n            ease,\n            duration,\n            repeat: 0,\n          });\n        }\n      }\n    );\n\n    setTimeout(() => {\n      const { upLeftX, upLeftY, rectWidth, rectHeight } =\n        scene.extensions.findCorners(bridgeSprites);\n      const bridgeBody = scene.add\n        .zone(upLeftX, upLeftY, rectWidth, rectHeight)\n        .setOrigin(0, 1);\n      this.scene.physics.world.enable(\n        bridgeBody,\n        Phaser.Physics.Arcade.STATIC_BODY\n      );\n\n      if (arcadeBodyGuard(bridgeBody.body)) {\n        bridgeBody.body.setAllowGravity(false).setImmovable().setFriction(0, 0);\n        bridgeBody.body.moves = false;\n      }\n\n      scene.physics.add.collider(player, bridgeBody, () => {});\n    }, duration);\n  }\n\n  createTraps(\n    scene: DefaultScene,\n    map: Phaser.Tilemaps.Tilemap,\n    player: Phaser.Types.Physics.Arcade.SpriteWithDynamicBody\n  ) {\n    const layer = map.getObjectLayer(\"traps\");\n    const trapsList = layer?.objects || [];\n\n    trapsList.forEach(({ x = -100, y = -100, properties }) => {\n      const props: TrapProps = scene.extensions.getPropsFromObject(properties);\n\n      const textureName =\n        props.orientation === \"vertical\" ? \"trap_v\" : \"trap_h\";\n\n      const trap = scene.add\n        .sprite(x, y, textureName)\n        .setOrigin(0, 1)\n        .setDepth(-1);\n\n      scene.physics.world.enable(trap);\n\n      if (arcadeBodyGuard(trap.body)) {\n        trap.body.setAllowGravity(false);\n        trap.body.moves = false;\n      }\n\n      scene.physics.add.overlap(player, trap, () => {\n        // -- HP Here\n      });\n    });\n  }\n}\n","import { storyConfig } from \"game/modules\";\nimport { DialogList } from \"game/modules/game/circle/types\";\n\nconst { tal } = storyConfig.characters;\n\nexport const dialogs: DialogList = [\n  [\n    {\n      portrait: tal.PORTRAIT,\n      name: tal.NAME,\n      replica: \"Hi, my friend\",\n    },\n    {\n      portrait: tal.PORTRAIT,\n      name: tal.NAME,\n      replica: \"This is our first dialog\",\n    },\n    {\n      portrait: tal.PORTRAIT,\n      name: tal.NAME,\n      replica:\n        \"test string: lalalalalala ababagalamaga -sdfdsf -dfsd f -hhfghfgh-jopikdsf ojeo sdfdsf -dfsd f -hhfghfgh-jopikdsf ojeo -*/ s d f dsf -dfsd f -hhfghfgh-jopikdsf ojeo /* sdfdsf -dfsd f -hhfghfgh-jopikdsf ojeo sdfdsf -dfsd f -hhfghfgh-jopikdsf ojeo sdfdsf -dfsd f -hhfghfgh-jopikdsf ojeo sdfdsf -dfsd f -hhfghfgh-jopikdsf ojeo\",\n    },\n    {\n      portrait: tal.PORTRAIT,\n      name: tal.NAME,\n      replica: \"Hope you fun\",\n    },\n  ],\n];\n","import { storyConfig } from \"game/modules\";\nimport { PreloadTypes } from \"game/modules/game/circle\";\n\nconst assets = \"assets/\";\n\nconst { tal } = storyConfig.characters;\n\nexport const gameResourcesData: PreloadTypes[] = [\n  {\n    method: \"image\",\n    data: [\n      [\"platforms32x32\", assets + \"platforms/platforms32x32.png\"],\n      [\"playerSprite\", assets + \"player/body.png\"],\n      [\"playerBody\", assets + \"player/ball.png\"],\n\n      [\"dialogCenter\", assets + \"ui/dialog-2.png\"],\n      [\"dialogLeft\", assets + \"ui/dialog-1.png\"],\n      [\"dialogRight\", assets + \"ui/dialog-3.png\"],\n      [\"dialogNextButton\", assets + \"ui/dialog-button-next.png\"],\n      [\"dialogSkipButton\", assets + \"ui/dialog-button-skip.png\"],\n\n      //portraits\n      [tal.PORTRAIT, assets + \"characters/TAL/portrait.png\"],\n\n      //objects\n      [\"trap_h\", assets + \"enemies/fire.png\"],\n      [\"trap_v\", assets + \"enemies/fire_2.png\"],\n    ],\n  },\n\n  {\n    method: \"tilemapTiledJSON\",\n    data: [[\"map\", assets + \"levels/default/level.json\"]],\n  },\n\n  {\n    method: \"atlas\",\n    data: [\n      [\n        \"teleport\",\n        assets + \"effects/teleport.png\",\n        assets + \"effects/teleport_atlas.json\",\n      ],\n      [\n        \"buttons\",\n        assets + \"buttons/buttons.png\",\n        assets + \"buttons/buttons.json\",\n      ],\n      [\n        \"bridges\",\n        assets + \"bridges/bridget.png\",\n        assets + \"bridges/bridget.json\",\n      ],\n    ],\n  },\n];\n","import { settingsConfig } from \"..\";\nimport DefaultScene from \"../scenes/Default\";\n\nexport const config: Phaser.Types.Core.GameConfig = {\n  type: Phaser.CANVAS,\n  parent: \"game-box\",\n  height: 720,\n  width: 1280,\n  scene: [DefaultScene],\n  backgroundColor: 0x14003b,\n  // transparent: true,\n  physics: {\n    default: \"arcade\",\n    arcade: {\n      gravity: { y: settingsConfig.gravity },\n      debug: true,\n    },\n  },\n};\n","import { useLayoutEffect, useState } from \"react\";\n\nimport { renderGame } from \"./instance\";\nimport css from \"./style.module.css\";\n\nlet game: Phaser.Game | null = null;\n\nexport const Game = () => {\n  const [refBox, setRefBox] = useState<HTMLDivElement | null>(null);\n\n  useLayoutEffect(() => {\n    if (refBox) {\n      game = renderGame(refBox.offsetWidth);\n    }\n\n    return () => {\n      game?.destroy(true, false);\n    };\n  });\n\n  return (\n    <div className={css.root}>\n      <div\n        className={css.game}\n        id=\"game-box\"\n        ref={(ref) => {\n          setRefBox(ref);\n        }}\n      />\n\n      <div className={css.movement}>\n        <p>\n          <b>Left/Right arrow</b> -- move\n        </p>\n\n        <p>\n          <b>Up arrow</b> -- jump\n        </p>\n\n        <p>\n          <b>Up arrow + Left/Right arrow, when hitting the wall</b> -- spring back\n        </p>\n\n        <p>\n          <b>Enter</b> -- save position\n        </p>\n\n        <p>\n          <b>Space</b> -- teleport to saved position\n        </p>\n      </div>\n    </div>\n  );\n};\n","import Phaser from \"phaser\";\nimport { config } from \"./modules/service/config\";\n\nexport const renderGame = (w: number) => {\n  return new Phaser.Game(config);\n};\n","import css from \"./style.module.css\";\n\nimport { Game } from \"../../game\";\nimport { useState } from \"react\";\nimport { config } from \"game/modules/service/config\";\n\nfunction App() {\n  const [isDebug, setIsDebug] = useState<boolean>(false);\n\n  const changeDebug = (v: boolean) => {\n    if (config.physics?.arcade) config.physics.arcade.debug = v;\n    setIsDebug(true);\n  };\n\n  return (\n    <div className={css.root}>\n      {!isDebug ? (\n        <div className={css.debug}>\n          <p>Enable physic debug?</p>\n\n          <div>\n            <button\n              onClick={() => {\n                changeDebug(true);\n              }}\n              className={css.dButton}\n            >\n              yes\n            </button>\n            <button\n              onClick={() => {\n                changeDebug(false);\n              }}\n              className={css.dButton}\n            >\n              no\n            </button>\n          </div>\n        </div>\n      ) : (\n        <Game />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./containers\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__28lIV\",\"debug\":\"style_debug__saV1K\",\"dButton\":\"style_dButton__1LtKb\"};"],"sourceRoot":""}